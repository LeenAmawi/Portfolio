create table Employee(
Essn number not null,
Fname varchar2(20) not null,
Lname varchar2(20)not null,
Hire_date date default current_date,
salary number not null,
birth_date date,
Address varchar2(100),
jender varchar2(6) not null,
position varchar2(90) not null,
manager_ssn number null,
service_id number,
constraint pk_employee primary key (Essn),
constraint fk_services foreign key (service_id) references service (service_id)
);
alter table employee
add constraint fk_employeee foreign key(manager_ssn) references employee(Essn);

create table Room(
    Room_id number generated by default as identity,
room_type varchar2(200) not null,
price_per_night number not null,
status varchar2(40) not null,
constraint pk_room primary key (room_id)
);


create table Reservation(
Reservation_id number generated by default as identity,
Cssn number not null,
Essn number not null,
Room_id number not null,
check_outDate date ,
check_inDate date default current_date,
Total_price number not null,
constraint pk_Reservation primary key (Reservation_id),
constraint fk_client foreign key (Cssn) references Client(Cssn),
constraint fk_Room foreign key (Room_id) references Room(Room_id),
constraint fk_reservation_employee foreign key(Essn) references employee(Essn)
);

CREATE TABLE Client(
Cssn NUMBER not null,
Fname VARCHAR2(50) not null,
Lname VARCHAR2(50) not null,
Email VARCHAR2(50),
Phone_number NUMBER,
Jender VARCHAR2(50) not null,
Enrollment_date date Default current_date,
Constraint pk_client primary key(Cssn)
);
CREATE TABLE Service(
Service_id NUMBER generated by default as identity,
Service_name VARCHAR2(50),
Service_Price NUMBER,
Constraint pk_Service primary key(Service_id)
);

create table Client_service(
    Cssn number not null,
    service_id number not null,
    Quantity number ,
    constraint pk_clientService primary key (Cssn,Service_id),
    constraint fk_Client_Service1 foreign key (Cssn) references Client(Cssn),
    constraint fk_Client_Service2 foreign key (service_id) references service(service_id)
);

CREATE TABLE Complaints(
Complaint_id NUMBER generated by default as identity,
Cssn NUMBER,
Room_id NUMBER,
Type VARCHAR2(50),
Complaint_Date DATE default current_date,
Status VARCHAR2(20) not null,
Constraint pk_Complaint primary key(Complaint_id ),
constraint fk_complaint_Client foreign key (Cssn) references client(Cssn),
constraint fk_complaint_room foreign key (Room_id) references Room(Room_id)
); select * from employee

insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,service_id) 
values (202211111,'Ahmad','samer',2000,to_date('1999-01-11','yyyy-mm-dd'),'palestine-jenin','male','manager of food section',4);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,service_id) 
values (202233333,'khaled','saleh',3000,to_date('1994-01-11','yyyy-mm-dd'),'palestine-nablus','male','manager of cleaning section',21);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,service_id) 
values (202212345,'mahmoud','saleem',6000,to_date('1986-07-26','yyyy-mm-dd'),'palestine-jerusalem','male','manager of reception department',2);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position) 
values (202345234,'Ahmad','samer',5000,to_date('1993-11-28','yyyy-mm-dd'),'palestine-hebron','male','manager of services department');
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,service_id) 
values (198323456,'osama','saleem',8000,to_date('1976-08-24','yyyy-mm-dd'),'palestine-qalqilya','male','manager of security department',1);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,manager_ssn,service_id) 
values (202298765,'salma','ahmad',1500,to_date('1999-04-15','yyyy-mm-dd'),'palestine-jenin','female','chef',202211111,4);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,manager_ssn,service_id) 
values (203211112,'tameem','othman',1600,to_date('2000-07-25','yyyy-mm-dd'),'palestine-bethlehem','male','janitor',202233333,21);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,manager_ssn,service_id) 
values (234567893,'fadi','othman',4000,to_date('1980-10-19','yyyy-mm-dd'),'palestine-tulkarm','male','receptonist',202212345,2);
insert into  employee (Essn,Fname,Lname,salary,birth_date,address,Jender,position,manager_ssn,service_id) 
values (983276451,'laith','saleem',5000,to_date('1991-12-20','yyyy-mm-dd'),'palestine-ramallah','male','security',198323456,1);


insert into client (Cssn,Fname,Lname,Email,Phone_number,jender) values (12348769,'naya','salman','naya@gmail.com',056789432,'Female');
insert into client (Cssn,Fname,Lname,Email,Phone_number,jender) values (546987323,'faya','abdullah','faya@gmail.com',056956843,'Female');
insert into client (Cssn,Fname,Lname,Email,Phone_number,jender) values (786970321,'mohammed','jamal','mohammed@gmail.com',056879543,'male');
insert into client (Cssn,Fname,Lname,Email,Phone_number,jender) values (657934585,'john','smith','john@gmail.com',056796543,'male');
INSERT INTO Client (Cssn, Fname,Lname,Email,Phone_number ,Jender)VALUES(224467813,'salma','habaybe','salma@com',0567722476,'female');
INSERT INTO Client (Cssn, Fname,Lname,Email,Phone_number ,Jender)VALUES(224453212,'taim','hamed','taim@gmail.com',059567110,'male');
select* from client
insert into service(service_name,service_price) values ('security',60);
insert into service (service_name,service_price) values('cleaning',100);
INSERT INTO Service(Service_name,Service_Price)VALUES('Reception Service',50);
INSERT INTO Service(Service_name,Service_Price)VALUES('Room Service',600);
INSERT INTO Service(Service_name,Service_Price)VALUES('Food Service',900);
INSERT INTO Service(Service_name,Service_Price)VALUES('Car rental Service',1200);
INSERT INTO Service(Service_name,Service_Price)VALUES('Spa and Wellness Service',1800);

insert into Room(room_type,price_per_night,status) values ('Single',500,'reserved');
insert into Room(room_type,price_per_night,status) values ('Double',1000,'Under Maintenance');
insert into Room(room_type,price_per_night,status) values ('Triple',2000,'Vacant');
insert into Room(room_type,price_per_night,status) values ('Suite',3000,'Reserved');
insert into Room(room_type,price_per_night,status) values ('Deluxe',4000,'Reserved');
INSERT INTO Room(Room_type,Price_per_night,Status)VALUES('Double',1000,'Vacant');
INSERT INTO Room(Room_type,Price_per_night,Status)VALUES('Single',500,'Vacent');
insert into Room(room_type,price_per_night,status) values ('Double',1000,'reserved');
insert into Room(room_type,price_per_night,status) values ('Suite',3000,'Reserved');
insert into Room(room_type,price_per_night,status) values ('Single',500,'reserved');
insert into Room(room_type,price_per_night,status) values ('Suite',500,'Reserved');
insert into Room(room_type,price_per_night,status) values ('Suite',500,'Reserved');

insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(12348769,234567893,1,to_date('2025-1-30','yyyy-mm-dd'),1000);
insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(546987323,234567893,4,to_date('2025-02-01','yyyy-mm-dd'),9000);
insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(546987323,234567893,24,to_date('2025-02-02','yyyy-mm-dd'),16000);
insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(786970321,234567893,3,to_date('2025-02-01','yyyy-mm-dd'),1500);
insert into Reservation(Cssn,Essn,Room_id,check_InDate,check_outDate,Total_price) values(657934585,202345234,3,to_date('2025-03-01','yyyy-mm-dd'),to_date('2025-03-12','yyyy-mm-dd'),5500);
insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(224467813,234567893,26,to_date('2025-02-09','yyyy-mm-dd'),11000);
insert into Reservation(Cssn,Essn,Room_id,check_outDate,Total_price) values(224453212,234567893,28,to_date('2025-02-04','yyyy-mm-dd'),3000);

insert into Client_service values (12348769,21,4); 
insert into Client_service values (546987323,3,5); 
insert into Client_service values (546987323,4,3); 
insert into Client_service values (786970321,4,2);
insert into Client_service values (224453212,22,1); 
insert into Client_service values (224467813,23,1); 

insert into Complaints(Cssn,Room_id,type,status)values (12348769,1,'Room cleanliness issues','Resolved');
insert into Complaints(Cssn,Room_id,type,status)values (546987323,4,'Messing air conditioning','Unresolved');
insert into Complaints(Cssn,Room_id,type,status)values (786970321,3,'Wi-Fi outages','unresolved');
insert into Complaints(Cssn,Room_id,type,status)values (12348769,1,'Delayed room service','resolved');
insert into Complaints(Cssn,Room_id,type,status)values (546987323,24,'Poor food Quality','resolved');

//Queries:
//1) use select to retrieve all data from room table depend on price desc:
select * from room 
order by (price_per_night) desc;
//2) increase the price per nightof a deluxe room  by 10% 
update table Room
set Price=Price*1.1
where room-type='Single';
//3) how many reservations has each Client based on their Cssn
select count(reservation_id) from reservation
group by (cssn);
//4 retrieve number of managers in the hotel
select count(manager_ssn) from employee;
//5)retrieve all data of the most expensive room
select * from Room 
where price_per_night=(select max(price_per_night) from room);
//6) retrieve all data of employees that reserve more than 4 reservations
select * from employee 
where Essn in (select Essn from reservation
 group by(Essn) 
having count(reservation_id)>4);
//7) retrieve the year and month from the check_outDate for each reservation, grouped by year and month, showing the year and month in separate columns.
select extract( year from check_outDate) as"year",extract( month from check_outDate)as"Month" from reservation 
group by extract( year from check_outDate),extract( month from check_outDate);
//8) determining Clients loyalty based on total price
select reservation_id,total_price,
case 
    when total_price < 3000
    then'Normal Client'
    when total_price between 3001 and 6000
    then 'Frequent Client'
    when total_price>6001
    then 'VIP Client'
end as Client_category
from reservation;
//9)delete all reservations where the check-in date is before 01-01-2025
delete from reservation
where check_InDate< to_date('2025-01-01','yyyy-mm-dd'); 
//10) retrieve all reservation_id ,First name and last name of each employee that make this reservations
select  employee.Fname,employee.Lname ,reservation.reservation_id from employee natural join reservation;
//11) retrieve all employees even if they do not have services
select Fname,Lname,service_id from employee left join service;
//12) retrieve reservation_id and room_id  which the check_inDate greater than or equal 1-1-2025
select Room.Room_id, Reservation.reservation_id
from Room join Reservation
on Room.Room_id = Reservation.Room_id
wHERE Reservation.check_inDate >= TO_DATE('2025-01-01', 'YYYY-MM-DD');
//13 round Room price and compare with average Room Price
SELECT Room_id, room_type, ROUND(price_per_night) aS "Rounded_Price",
       ROUND((SELECT AVG(price_per_night) FROM Room)) aS "Average Room Price"
FROM Room;
//14)retrieve the names of employees and the number of reservations they manage, provided that the employee has managed more than 3 reservations using join.
select employee.Essn,employee.Fname,employee.Lname,count(reservation.reservation_id)
from Employee join reservation
on(employee.Essn=reservation.Essn)
group by(employee.Essn,employee.Fname,employee.Lname)
having count(reservation.reservation_id)>3;
//15) retrieve the full names of employees
select trim(concat(concat(Fname,' '),Lname)) as "Full Name" from employee;
//16)Write a query to check if there are employees in the Employee table who are managing reservations.
select e.Fname,e.Lname
from Employee e
WHERE EXISTS (SELECT 1 FROM Reservation r
    WHERE e.Essn = r.Essn);
//17)retrieve distinct room types that are reserved
   select distinct room_type from Room
    where status ='reserved';
//18) retrieve number of complaints in each room
   select Room_id, count(*) as "complaint count"
   from complaints
   GROUP BY Room_id;
   //19) retrieve employees whose birth-date is within 3 months from today
select Essn, Fname, Lname, birth_date
from Employee
where birth_date between sysDate and add_months(sysdate, 3);
retrieve all Employees Who Have No Manager Assigned
select Essn, Fname, Lname, position
from Employee
where manager_ssn is null;

select * from employee join service 
on employee.service_id=service.service_id;
select * from hr.reservation where room_id=(select max(reservation_id)from hr.reservation);
select * from all_tables where table_name='reservation';
Sepect room_id from reservation
Group by (room_id)
Having max(reservation_id);